{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-pills/topic-pills.component.css","webpack:///./src/app/topic-pills/topic-pills.component.html","webpack:///./src/app/topic-pills/topic-pills.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h1>Admin</h1>\\r\\n  <a routerLink=\\\"/home\\\">Home</a>|\\r\\n  <a routerLink=\\\"/profile\\\">Profile</a>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\r\\n        <li class=\\\"list-group-item\\\"\\r\\n            (click)=\\\"selectCourse(course)\\\"\\r\\n            *ngFor=\\\"let course of courses\\\"\\r\\n            [ngClass]=\\\"{'active':course.id == selectedCourse.id}\\\" >\\r\\n          {{course.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">\\r\\n          Sections\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <p>Current Sections For Course </p>\\r\\n          <p *ngFor=\\\"let section of sections\\\">\\r\\n            <a (click)=\\\"selectSection(section)\\\">{{section.name}} - {{section.seats}}</a>\\r\\n            <button class=\\\"btn btn-danger float-right\\\"\\r\\n                    (click)=\\\"deleteSection(section)\\\">Delete Section</button>\\r\\n            <button class=\\\"btn btn-warning float-right\\\"\\r\\n                    (click)=\\\"editSection(section)\\\">Edit Section</button>\\r\\n          </p>\\r\\n         <!-- <p>Selected Sections : {{selectedSection.name}}</p>-->\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <input [(ngModel)]=\\\"sectionName\\\"\\r\\n                 placeholder=\\\"Section Name\\\"\\r\\n                 class=\\\"form-control\\\">\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <input [(ngModel)]=\\\"seats\\\"\\r\\n                 placeholder=\\\"Seats Available\\\"\\r\\n                 class=\\\"form-control\\\">\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <button class=\\\"btn btn-block btn-success\\\"\\r\\n                  (click)=\\\"createSection(sectionName,seats)\\\">Add Section</button>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <button class=\\\"btn btn-block btn-secondary\\\"\\r\\n                  (click)=\\\"updateSection(sectionName,seats)\\\">Update Section</button>\\r\\n        </li>\\r\\n        <!--<li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\r\\n          {{section.title}}\\r\\n        </li>-->\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\nimport {SectionServiceClient} from \"../services/section.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor(private service: CourseServiceClient,\r\n              private sectionService:SectionServiceClient) { }\r\n\r\n  courses = [];\r\n  courseID='';\r\n  selectedCourse = {};\r\n  selectedSection={};\r\n  sectionName='';\r\n  seats='';\r\n  sectionId='';\r\n  sections=[];\r\n\r\n  selectSection(section){\r\n    this.selectedSection = section;\r\n  }\r\n\r\n  deleteSection(section){\r\n    console.log(section._id);\r\n    this.sectionService\r\n      .deleteSection(section._id)\r\n      .then(() =>{\r\n        this.sectionService.findAllSectionsForCourse(this.courseID)\r\n          .then(sections => this.sections = sections)\r\n      });\r\n  }\r\n\r\n  editSection(section){\r\n    this.sectionId = section._id;\r\n    this.sectionName = section.name;\r\n    this.seats = section.seats;\r\n  }\r\n\r\n  updateSection(sectionName,seats){\r\n    console.log(\"Update : \" + sectionName + \" : \" + seats + \": \" + this.sectionId);\r\n    this.sectionService\r\n      .updateSection(sectionName,seats,this.sectionId)\r\n      .then(() =>{\r\n        this.sectionService.findAllSectionsForCourse(this.courseID)\r\n          .then(sections => this.sections = sections)\r\n      });\r\n  }\r\n\r\n  selectCourse(course) {\r\n    this.courseID = course.id;\r\n    this.sectionService\r\n      .findAllSectionsForCourse(this.courseID)\r\n      .then(sections => this.sections = sections)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.findAllCourses()\r\n      .then(courses => {\r\n        this.courses = courses;\r\n      });\r\n\r\n  }\r\n\r\n  createSection(sectionName,seats){\r\n    this.sectionService\r\n      .createSection(this.courseID,sectionName,seats)\r\n      .then(() =>{\r\n        this.sectionService.findAllSectionsForCourse(this.courseID)\r\n          .then(sections => this.sections = sections)\r\n      });\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--\\r\\n<app-white-board></app-white-board>\\r\\n-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-column-navigator';\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport {CourseNavigatorServiceClient} from \"./services/course-navigator.service.client\";\r\nimport { CourseNavigatorComponent } from \"./course-navigator/course-navigator.component\";\r\nimport { WhiteBoardComponent } from \"./white-board/white-board.component\";\r\nimport { CourseGridComponent } from \"./course-grid/course-grid.component\";\r\nimport {CourseServiceClient} from \"./services/course.service.client\";\r\nimport {routing} from \"./app.routing\";\r\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\r\nimport { ModuleListComponent } from './module-list/module-list.component';\r\nimport {ModuleServiceClient} from \"./services/module.service.client\";\r\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\r\nimport {LessonServiceClient} from \"./services/lesson.service.client\";\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {UserServiceClient} from \"./services/user.service.client\";\r\nimport { SectionListComponent } from './section-list/section-list.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport {SectionServiceClient} from \"./services/section.service.client\";\r\nimport { TopicPillsComponent } from './topic-pills/topic-pills.component';\r\nimport { WidgetListComponent } from './widget-list/widget-list.component';\r\nimport {TopicServiceClient} from \"./services/topic.service.client\";\r\nimport {WidgetServiceClient} from \"./services/widget.service.client\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CourseNavigatorComponent,\r\n    WhiteBoardComponent,\r\n    CourseGridComponent,\r\n    CourseViewerComponent,\r\n    ModuleListComponent,\r\n    LessonTabsComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    SectionListComponent,\r\n    AdminComponent,\r\n    TopicPillsComponent,\r\n    WidgetListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    routing,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    CourseNavigatorServiceClient,\r\n    CourseServiceClient,\r\n    ModuleServiceClient,\r\n    LessonServiceClient,\r\n    UserServiceClient,\r\n    SectionServiceClient,\r\n    TopicServiceClient,\r\n    WidgetServiceClient\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { WhiteBoardComponent } from \"./white-board/white-board.component\";\r\nimport {CourseViewerComponent} from \"./course-viewer/course-viewer.component\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {CourseNavigatorComponent} from \"./course-navigator/course-navigator.component\";\r\nimport {CourseGridComponent} from \"./course-grid/course-grid.component\";\r\nimport {SectionListComponent} from \"./section-list/section-list.component\";\r\nimport {AdminComponent} from \"./admin/admin.component\";\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: WhiteBoardComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'admin', component: AdminComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'courses', component: CourseNavigatorComponent },\r\n  { path: 'courses/grid', component: CourseGridComponent },\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/section', component: SectionListComponent },\r\n  { path: 'course/:courseId/module/:moduleId',component:CourseViewerComponent},\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId',component:CourseViewerComponent},\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\r\n  { path: '**', component: WhiteBoardComponent} // last\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".card{\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.btn-success{\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n<h4>\\r\\n  <!--Course Grid {{courses.length}}-->\\r\\n  Available Courses\\r\\n</h4>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor = \\\"let course of courses\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\r\\n        <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\r\\n        <a routerLink=\\\"/course/{{course.id}}\\\" class=\\\"btn btn-secondary my-2 my-sm-0 mr-2\\\">See Course Content</a>\\r\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\" class=\\\"btn btn-success my-2 my-sm-0 mr-2\\\">Enroll</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\nimport {Course} from \"../models/course.model.client\";\r\n\r\n@Component({\r\n  selector: \"app-course-grid\",\r\n  templateUrl: './course-grid.component.html',\r\n  styleUrls: ['./course-grid.component.css']\r\n})\r\nexport class CourseGridComponent implements OnInit {\r\n\r\n  constructor(private service: CourseServiceClient) {\r\n  }\r\n\r\n  courses : Course[] = [];\r\n\r\n  ngOnInit() {\r\n    this.service.findAllCourses()\r\n      .then(courses => {\r\n        this.courses = courses\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h1>Course Navigator</h1>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\r\\n        <li (click)=\\\"selectCourse(course)\\\"\\r\\n            class=\\\"list-group-item\\\"\\r\\n            *ngFor=\\\"let course of courses\\\"\\r\\n            [ngClass]=\\\"{'active':course.id == selectedCourse.id}\\\" >\\r\\n          {{course.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Modules</li>\\r\\n        <li class=\\\"list-group-item\\\"\\r\\n            *ngFor=\\\"let module of modules\\\"\\r\\n            (click)=\\\"selectModule(module)\\\"\\r\\n            [ngClass] = \\\"{'active': module.id == selectedModule.id}\\\">{{module.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Lessons</li>\\r\\n        <li class=\\\"list-group-item\\\"\\r\\n            *ngFor=\\\"let lesson of lessons\\\"\\r\\n            (click)=\\\"selectLesson(lesson)\\\"\\r\\n            [ngClass] = \\\"{'active': lesson.id == selectedLesson.id}\\\"\\r\\n            >{{lesson.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Topics</li>\\r\\n        <li class=\\\"list-group-item\\\"\\r\\n            *ngFor=\\\"let topic of topics\\\"\\r\\n        >{{topic.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import {Component, OnInit} from \"@angular/core\";\r\nimport {CourseNavigatorServiceClient} from \"../services/course-navigator.service.client\";\r\n\r\n@Component({\r\n  selector: \"app-course-navigator\",\r\n  templateUrl: \"./course-navigator.component.html\",\r\n  styleUrls: [\"./course-navigator.component.css\"]\r\n})\r\nexport class CourseNavigatorComponent implements OnInit {\r\n\r\n  constructor(private service: CourseNavigatorServiceClient) {\r\n  }\r\n\r\n  courses = [];\r\n  topics = [];\r\n  courseID;\r\n  selectedCourse = {};\r\n  selectedModule = {};\r\n  selectedLesson = {};\r\n  moduleID;\r\n  modules = [];\r\n  lessons = [];\r\n\r\n\r\n  selectCourse(course) {\r\n    alert(course.id);\r\n    this.selectedCourse = course;\r\n    this.courseID = course.id;\r\n    this.service.findAllModulesForCourse(course.id)\r\n      .then(modules => {\r\n        this.modules = modules;\r\n      });\r\n  }\r\n\r\n  selectModule(module) {\r\n    alert(module.id);\r\n    this.selectedModule = module;\r\n    this.moduleID = module.id;\r\n    this.service.findAllLessonsForModule(this.courseID, module.id)\r\n      .then(lessons => {\r\n        this.lessons = lessons;\r\n      });\r\n  }\r\n\r\n  selectLesson(lesson) {\r\n    alert(lesson.id);\r\n    this.selectedLesson = lesson;\r\n    this.service.findAllTopicsForLesson(this.courseID, this.moduleID, lesson.id)\r\n      .then(topics => {\r\n        this.topics = topics;\r\n      });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.findAllCourses()\r\n      .then(courses => {\r\n        this.courses = courses;\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: purple\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"\\r\\n     style=\\\"color: wheat;\\r\\n     font-family: 'Comic Sans MS';\\r\\n     font-size: x-large\\\">WhiteBoard</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item active disabled\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" [hidden]=!admin\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/admin\\\">Admin</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">-->\\r\\n    <form [hidden]=!loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n      <span class=\\\"navbar-text\\\">\\r\\n        Logged in as : </span>\\r\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\r\\n      </span>\\r\\n      &nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\r\\n              (click)=\\\"logout()\\\">Logout\\r\\n      </button>\\r\\n    </form>\\r\\n\\r\\n    <form [hidden]=loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0 mr-2\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/register\\\">Register\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h2>{{course.title}}</h2>\\r\\n  <app-module-list></app-module-list>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\nimport {Course} from \"../models/course.model.client\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-course-viewer',\r\n  templateUrl: './course-viewer.component.html',\r\n  styleUrls: ['./course-viewer.component.css']\r\n})\r\nexport class CourseViewerComponent implements OnInit {\r\n\r\n  constructor(private  service : CourseServiceClient,\r\n              private userService:UserServiceClient,\r\n              private route :ActivatedRoute,\r\n              private router :Router) {\r\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\r\n  }\r\n\r\n  course: Course = new Course();\r\n  username;\r\n  password;\r\n  admin = false;\r\n  loginVal = false;\r\n\r\n  loadCourse(courseId){\r\n    this.service.findCourseById(courseId)\r\n      .then(course => this.course = course);\r\n  }\r\n\r\n  logout() {\r\n    this.userService\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService\r\n      .profile()\r\n      .then((user) => {\r\n          console.log('logged in as : ', user);\r\n          this.username = user.username;\r\n          if (this.username !== 'No session maintained') {\r\n            this.loginVal = true;\r\n          }\r\n          if (this.username === 'admin') {\r\n            this.admin = true;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n<ul class=\\\"nav nav-tabs\\\">\\r\\n  <li class=\\\"nav-item\\\" *ngFor=\\\"let lesson of lessons\\\">\\r\\n    <a class=\\\"nav-link active\\\"\\r\\n       [ngClass] =\\\"{'active': lesson.id == lessonId}\\\"\\r\\n    routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">{{lesson.title}}</a>\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"mt-2 mb-3 p-2\\\">\\r\\n  <app-topic-pills></app-topic-pills>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\r\nimport {Lesson} from \"../models/lesson.model.client\";\r\n\r\n@Component({\r\n  selector: 'app-lesson-tabs',\r\n  templateUrl: './lesson-tabs.component.html',\r\n  styleUrls: ['./lesson-tabs.component.css']\r\n})\r\nexport class LessonTabsComponent implements OnInit {\r\n\r\n  constructor(private service: LessonServiceClient,private route:ActivatedRoute) {\r\n    this.route.params.subscribe(params=>this.setParams(params));\r\n  }\r\n\r\n  courseId;\r\n  moduleId;\r\n  lessonId;\r\n  lessons: Lesson[] =[];\r\n\r\n  setParams(params){\r\n    this.courseId = params['courseId'];\r\n    this.moduleId = params['moduleId'];\r\n    this.lessonId = params['lessonId'];\r\n    this.loadAllLessons(this.courseId,this.moduleId);\r\n  }\r\n\r\n  loadAllLessons(courseId,moduleId){\r\n    this.moduleId = moduleId;\r\n    console.log(moduleId);\r\n    this.service.findAllLessonForModule(courseId,moduleId)\r\n      .then(lessons => this.lessons = lessons);\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: purple\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"\\r\\n     style=\\\"color: wheat;\\r\\n     font-family: 'Comic Sans MS';\\r\\n  font-size: x-large\\\">WhiteBoard</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <h1>Login</h1>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"usernameFld\\\" class=\\\"col-sm-1 col-form-label\\\">\\r\\n      Username\\r\\n    </label>\\r\\n\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <input [(ngModel)]=\\\"username\\\"\\r\\n             id=\\\"usernameFld\\\"\\r\\n             placeholder=\\\"alice\\\"\\r\\n             class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"passwordFld\\\" class=\\\"col-sm-1 col-form-label\\\">\\r\\n      Password\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <input [(ngModel)]=\\\"password\\\"\\r\\n             id=\\\"passwordFld\\\"\\r\\n             placeholder=\\\"*********\\\"\\r\\n             type=\\\"password\\\"\\r\\n             class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"loginBtn\\\" class=\\\"col-sm-1 col-form-label\\\"></label>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <button id=\\\"loginBtn\\\" class=\\\"btn btn-success btn-block\\\"\\r\\n              (click)=\\\"login(username,password)\\\">Login\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-1 col-form-label\\\"></label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      <a routerLink=\\\"/home\\\">Home</a>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <a routerLink=\\\"/register\\\">Register</a>\\r\\n    </div>\\r\\n  </div>\\r\\n-->\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private router : Router,\r\n              private service: UserServiceClient) { }\r\n\r\n  username;\r\n  password;\r\n\r\n  login(username,password){\r\n    const user={\r\n      username:username,\r\n      password:password\r\n    };\r\n    this.service.login(user)\r\n      .then((user) =>{\r\n      if(user.username !== 'No session maintained'){\r\n        console.log(user.username);\r\n        this.router.navigate(['profile']);\r\n      }\r\n\r\n      });\r\n\r\n\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class Course{\r\n  id: number;\r\n  title : string;\r\n}\r\n","module.exports = \".active.wbdv{\\r\\n  background-color: darkgray;\\r\\n  border-color: transparent;\\r\\n}\\r\\n\\r\\n.active.wbdv a{\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<!--<h3>Module List for Course : {{courseId}}</h3>-->\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\r\\n      <li class=\\\"list-group-item wbdv\\\"\\r\\n          [ngClass]=\\\"{'active':module.id == moduleId }\\\"\\r\\n          *ngFor=\\\"let module of modules\\\">\\r\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\"> {{module.title}}</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-8\\\">\\r\\n    <app-lesson-tabs></app-lesson-tabs>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {ModuleServiceClient} from \"../services/module.service.client\";\r\nimport {Module} from \"../models/module.model.client\";\r\n\r\n@Component({\r\n  selector: 'app-module-list',\r\n  templateUrl: './module-list.component.html',\r\n  styleUrls: ['./module-list.component.css']\r\n})\r\n\r\nexport class ModuleListComponent implements OnInit {\r\n\r\n  constructor(private service : ModuleServiceClient,private route:ActivatedRoute) {\r\n    this.route.params.subscribe(params => this.setParams(params));\r\n  }\r\n\r\n  courseId;\r\n  moduleId;\r\n  modules:Module[] = [];\r\n  setParams(params){\r\n    this.courseId =params['courseId'];\r\n    this.moduleId = params['moduleId'];\r\n    this.loadModules(this.courseId);\r\n  }\r\n\r\n  loadModules(courseId){\r\n    this.courseId= courseId;\r\n    this.service.findAllModulesForCourse(courseId)\r\n      .then(modules => this.modules =modules);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: purple\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: wheat; font-size: x-large\\\">WhiteBoard</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item active disabled\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" [hidden]=!admin\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/admin\\\">Admin</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">-->\\r\\n    <form [hidden]=!loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n      <span class=\\\"navbar-text\\\">\\r\\n        Logged in as : </span>\\r\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\r\\n      </span>\\r\\n      &nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\r\\n              (click)=\\\"logout()\\\">Logout\\r\\n      </button>\\r\\n    </form>\\r\\n\\r\\n    <form [hidden]=loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0 mr-2\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/register\\\">Register\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <h1>Profile</h1>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"usernameFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Username\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"usernameFld\\\"\\r\\n               [(ngModel)]=\\\"username\\\"\\r\\n               placeholder=\\\"alice\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               disabled=\\\"true\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"firstNameFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        First Name\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"firstNameFld\\\"\\r\\n               [(ngModel)]=\\\"firstName\\\"\\r\\n               placeholder=\\\"alice\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"lastNameFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Last Name\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"lastNameFld\\\"\\r\\n               [(ngModel)]=\\\"lastName\\\"\\r\\n               placeholder=\\\"alice\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"phoneFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Phone\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"phoneFld\\\"\\r\\n               [(ngModel)]=\\\"phone\\\"\\r\\n               placeholder=\\\"(555) 123-7890\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"emailFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Email\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"emailFld\\\"\\r\\n               [(ngModel)]=\\\"email\\\"\\r\\n               placeholder=\\\"abc@example.com\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"roleFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Role\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <select id=\\\"roleFld\\\"\\r\\n                [(ngModel)]=\\\"role\\\"\\r\\n                class=\\\"form-control\\\">\\r\\n          <option value=\\\"FACULTY\\\">Faculty</option>\\r\\n          <option value=\\\"STUDENT\\\">Student</option>\\r\\n          <option value=\\\"ADMIN\\\">Admin</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for =\\\"dateFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Date of Birth\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <div class='input-group date'>\\r\\n          <input type='date'\\r\\n                 [(ngModel)]=\\\"dateOfBirth\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id='dateFld'/>\\r\\n          <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\r\\n                    </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label class=\\\"col-sm-2 col-form-label\\\"></label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <button id=\\\"updateBtn\\\"\\r\\n                (click)=\\\"updateProfile()\\\"\\r\\n                class=\\\"btn btn-success btn-block\\\">Update</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label class=\\\"col-sm-2 col-form-label\\\"></label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <button id=\\\"logoutBtn\\\"\\r\\n                (click)=\\\"logout()\\\"\\r\\n                class=\\\"btn btn-danger btn-block\\\">Logout</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<div [hidden]=admin>\\r\\n  <hr>\\r\\n  <h2 class=\\\"ml-lg-4\\\" style=\\\"color: mediumblue;\\\">Sections Enrolled in : {{sections.length}}</h2>\\r\\n  <ul class=\\\"list-group ml-lg-2\\\">\\r\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item my-1 rounded bg-light shadow-sm col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-4 border-right my-0\\\">\\r\\n          <b>{{enrollment.section.name}}</b>\\r\\n        </div>\\r\\n        <div class=\\\"col-4 pl-4\\\">\\r\\n              <span style=\\\"color: dimgrey;\\\">\\r\\n                <i> Course : {{fetchCourse(enrollment.section.courseId)}}</i>\\r\\n              </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-4 pl-4\\\">\\r\\n          <button (click)=\\\"drop(enrollment)\\\"\\r\\n                  class=\\\"float-right btn btn-outline-danger mr-2\\\">\\r\\n            <i class=\\\"fas fa-times\\\"></i>&nbsp;&nbsp;Drop</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\nimport {User} from \"../models/user.model.client\";\r\nimport {Router} from \"@angular/router\";\r\nimport {SectionServiceClient} from \"../services/section.service.client\";\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(private service:UserServiceClient,\r\n              private router:Router,\r\n              private courseService:CourseServiceClient,\r\n              private sectionService :SectionServiceClient) { }\r\n\r\n  admin = false;\r\n  loginVal = true;\r\n  user: {};\r\n  updatedUser={};\r\n  userId='';\r\n  username: '';\r\n  password: '';\r\n  firstName: '';\r\n  lastName: '';\r\n  role:'';\r\n  email:'';\r\n  phone:'';\r\n  dateOfBirth:Date;\r\n  sections =[];\r\n  courseIds=[];\r\n  coursesEnrolled=[];\r\n\r\n  logout() {\r\n    this.service\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n\r\n  updateProfile(){\r\n    this.updatedUser={\r\n      username: this.username,\r\n    password: this.password,\r\n    firstName: this.firstName,\r\n    lastName: this.lastName,\r\n    role:this.role,\r\n    email:this.email,\r\n    phone:this.phone,\r\n    dateOfBirth:this.dateOfBirth\r\n\r\n    };\r\n    this.service.updateUser(this.userId,this.updatedUser)\r\n      .then(user =>{\r\n        this.user =user;\r\n      } );\r\n\r\n  }\r\n\r\n\r\n  fetchCourse(courseId){\r\n   for(let i=0;i<this.coursesEnrolled.length;i++){\r\n     if(courseId === this.coursesEnrolled[i].id){\r\n       return (this.coursesEnrolled[i].title)\r\n     }\r\n   }\r\n  }\r\n\r\n  drop(enrollment){\r\n      this.sectionService\r\n        .dropStudentFromSection(enrollment.section._id,enrollment._id)\r\n        .then(() => {\r\n            this.sectionService.findEnrolledSectionsForStudent()\r\n              .then(sections => {\r\n                this.sections = sections;\r\n                for (let i = 0; i < this.sections.length; i++) {\r\n                  this.courseIds.push({\r\n                    'section': this.sections[i].section.name,\r\n                    'course': this.sections[i].section.courseId\r\n                  });\r\n                }\r\n                for (let i = 0; i < this.courseIds.length; i++) {\r\n                  (this.courseService.findCourseById(this.courseIds[i].course)\r\n                    .then((course) => {\r\n                      this.coursesEnrolled.push(course);\r\n                    }));\r\n                }\r\n              })\r\n        })\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.service.profile()\r\n      .then(user => {\r\n        if(user.username === 'No session maintained'){\r\n          this.loginVal =false;\r\n          this.router.navigate(['[login']);\r\n        }\r\n        if(user.username === 'admin'){\r\n          this.admin = true;\r\n        }else{\r\n        this.user = user;\r\n        this.userId = user._id;\r\n        this.username = user.username;\r\n        this.firstName =user.firstName;\r\n        this.lastName =user.lastName;\r\n        this.phone =user.phone;\r\n        this.password =user.password;\r\n        this.role =user.role;\r\n        this.email=user.email;\r\n        this.dateOfBirth =user.dateOfBirth;\r\n        this.sectionService.findEnrolledSectionsForStudent()\r\n          .then(sections => {\r\n            this.sections = sections;\r\n            for (let i = 0; i < this.sections.length; i++) {\r\n              this.courseIds.push({\r\n                'section': this.sections[i].section.name,\r\n                'course': this.sections[i].section.courseId\r\n              });\r\n            }\r\n            for (let i = 0; i < this.courseIds.length; i++) {\r\n              (this.courseService.findCourseById(this.courseIds[i].course)\r\n                .then((course) => {\r\n                  this.coursesEnrolled.push(course);\r\n                }));\r\n            }\r\n          })\r\n        }\r\n      } );\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: purple\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"\\r\\n     style=\\\"color: wheat;\\r\\n     font-family: 'Comic Sans MS';\\r\\n      font-size: x-large\\\">WhiteBoard</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n      </li>\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <h1>Sign Up</h1>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"usernameFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Username\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"usernameFld\\\"\\r\\n               [(ngModel)]=\\\"username\\\"\\r\\n               placeholder=\\\"alice\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"passwordFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Password\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input [(ngModel)]=\\\"password\\\"\\r\\n               id=\\\"passwordFld\\\"\\r\\n               placeholder=\\\"*********\\\"\\r\\n               type=\\\"password\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"verifyPasswordFld\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n        Verify Password\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input id=\\\"verifyPasswordFld\\\"\\r\\n               [(ngModel)]=\\\"password2\\\"\\r\\n               placeholder=\\\"*********\\\"\\r\\n               type=\\\"password\\\"\\r\\n               class=\\\"form-control\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label class=\\\"col-sm-2 col-form-label\\\"></label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <button (click)=\\\"register(username, password, password2)\\\"\\r\\n                class=\\\"btn btn-success btn-block\\\">\\r\\n          Register\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!--<div class=\\\"form-group row\\\">\\r\\n      <label class=\\\"col-sm-2 col-form-label\\\"></label>\\r\\n      <div class=\\\"col-sm-9\\\">\\r\\n        <a routerLink=\\\"/home\\\">Home</a>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <a routerLink=\\\"/login\\\">Login</a>\\r\\n      </div>\\r\\n    </div>-->\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  username ='';\r\n  password='';\r\n  password2='';\r\n  user ={};\r\n  constructor(private router:Router,\r\n              private service:UserServiceClient) {\r\n\r\n  }\r\n\r\n  register(username, password, password2) {\r\n    if(username === ''){\r\n      alert('Please enter username')\r\n    }else{\r\n        this.service.findUserByUsername(username)\r\n          .then(user =>{\r\n            if(user !== null){\r\n              alert(\"Username Already Taken!!!\");\r\n            }\r\n            else{\r\n              if(password === ''){\r\n                alert('Please enter password');\r\n              }else{\r\n                if(password2 === ''){\r\n                  alert('Please reconfirm password');\r\n                }else if(password !== password2){\r\n                  alert(\"Passwords Don't Match\");\r\n                }else {\r\n                  this.service\r\n                    .createUser(username, password)\r\n                    .then(() => {\r\n                      alert(\"You are registered successfully\");\r\n                      this.router.navigate(['profile'])});\r\n                }\r\n              }\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: purple\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: wheat; font-size: x-large\\\">WhiteBoard</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item active disabled\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" [hidden]=!admin\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/admin\\\">Admin</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">-->\\r\\n    <form [hidden]=!loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n      <span class=\\\"navbar-text\\\">\\r\\n        Logged in as : </span>\\r\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\r\\n      </span>\\r\\n      &nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\r\\n              (click)=\\\"logout()\\\">Logout\\r\\n      </button>\\r\\n    </form>\\r\\n\\r\\n    <form [hidden]=loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0 mr-2\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/register\\\">Register\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <!--<a routerLink=\\\"/home\\\">Home</a>-->\\r\\n  <h1>Sections for Course: {{courseId}}</h1>\\r\\n  <ul class=\\\"list-group rounded py-1 my-1\\\" style=\\\"width: 36rem\\\">\\r\\n    <li class=\\\"list-group-item shadow bg-light\\\"\\r\\n        *ngFor=\\\"let section of sections\\\">\\r\\n      <span style=\\\"font-size: large; color:dodgerblue;\\\"> </span>\\r\\n      {{section.name}}\\r\\n      <button class=\\\"float-right btn btn-success\\\"\\r\\n              (click)=\\\"enrollStudent(section)\\\">Enroll</button>\\r\\n      <br> <span style=\\\"color: dimgrey; font-style: italic \\\"> Seats Available :  </span>\\r\\n      {{section.seats}}\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n\\r\\n  {{username}}\\r\\n\\r\\n</div>\\r\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SectionServiceClient} from \"../services/section.service.client\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-section-list',\r\n  templateUrl: './section-list.component.html',\r\n  styleUrls: ['./section-list.component.css']\r\n})\r\nexport class SectionListComponent implements OnInit {\r\n\r\n  courseId;\r\n  sectionName='';\r\n  seats='';\r\n  username;\r\n  loginVal = true;\r\n  admin = false;\r\n  userId;\r\n\r\n  sections =[];\r\n  constructor(private route:ActivatedRoute,\r\n              private router:Router,\r\n              private service:SectionServiceClient,\r\n              private userService:UserServiceClient) {\r\n    this.route.params.subscribe(params => this.loadSections(params['courseId']) );\r\n  }\r\n\r\n  loadSections(courseId){\r\n    this.courseId = courseId;\r\n    this.service.findAllSectionsForCourse(courseId)\r\n      .then(sections => this.sections =sections);\r\n  }\r\n\r\n\r\n  logout() {\r\n    this.userService\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n\r\n  enrollStudent(section){\r\n    console.log(\"inside enrolll\" + this.loginVal);\r\n    if(this.loginVal === true){\r\n      this.service.findEnrollmentForStudent(this.userId,section._id)\r\n        .then(enrollment => {\r\n          if(section.seats === 0 ){\r\n            alert(\"Seats are no longer Available\");\r\n          }else if(enrollment != null){\r\n            alert(\"you are already enrolled for this section\");\r\n          }\r\n          else{\r\n            this.service.enrollStudentInSection(section._id)\r\n              .then(() =>{\r\n              this.router.navigate(['profile']);\r\n              })\r\n          }\r\n\r\n        })\r\n    }else{\r\n      alert(\"Please Login to Enroll\");\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.userService.profile()\r\n      .then(user => {\r\n        this.username = user.username;\r\n        this.userId = user._id;\r\n        if(this.username === 'No session maintained'){\r\n          this.loginVal = false;\r\n        }\r\n        if(this.username === 'admin'){\r\n          this.admin = true;\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n}\r\n","import {getResponseURL} from \"@angular/http/src/http_utils\";\r\n\r\nexport  class CourseNavigatorServiceClient {\r\n\r\n  findAllCourses() {\r\n   return fetch(\"http://localhost:8080/api/course\")\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAllModulesForCourse(courseId) {\r\n    return fetch(\"http://localhost:8080/api/course/\" + courseId + \"/module\")\r\n      .then(response => response.json());\r\n  }\r\n\r\n\r\n  findAllLessonsForModule(courseId, moduleId) {\r\n    return fetch(\"http://localhost:8080/api/course/\" + courseId + \"/module/\" + moduleId + \"/lesson\")\r\n      .then(response => response.json());\r\n\r\n  }\r\n\r\n  findAllTopicsForLesson(courseId, moduleId, lessonId){\r\n    return fetch(\"http://localhost:8080/api/course/\" + courseId + \"/module/\"\r\n      + moduleId + \"/lesson/\" + lessonId + \"/topic\")\r\n      .then(response => response.json());\r\n  }\r\n\r\n}\r\n","\r\nexport class CourseServiceClient {\r\n\r\n  COURSE_URL = \"http://localhost:8080/api/course\";\r\n\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findCourseById(courseId){\r\n    return fetch(this.COURSE_URL + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class LessonServiceClient{\r\n\r\n  MODULE_URL = \"http://localhost:8080/api/course/COURSE_ID/module/MODULE_ID/lesson\";\r\n\r\n  findAllLessonForModule(courseId,moduleId){\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID',courseId)\r\n      .replace('MODULE_ID',moduleId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient{\r\n\r\n  MODULE_URL= \"http://localhost:8080/api/course/COURSE_ID/module\";\r\n  findAllModulesForCourse(courseId){\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID',courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n}\r\n","\r\nexport class SectionServiceClient{\r\n\r\n  SECTION_URL =\"http://localhost:3000/api/course/COURSEID/section\";\r\n  BASE_SECTION_URL = \"http://localhost:3000/api/section\";\r\n\r\n  createSection(courseId,name,seats){\r\n    const section={\r\n      name:name,\r\n      seats:seats,\r\n      courseId:courseId\r\n    };\r\n    return fetch(this.SECTION_URL.replace('COURSEID',courseId),{\r\n      method:'post',\r\n      body: JSON.stringify(section),\r\n      credentials:'include',\r\n      headers:{\r\n        'content-type':'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  findAllSectionsForCourse(courseId){\r\n    return fetch(this.SECTION_URL.replace('COURSEID',courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  deleteSection(sectionId){\r\n    return fetch(this.BASE_SECTION_URL +\"/\" + sectionId ,{\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n\r\n  updateSection(sectionName,seats,sectionId){\r\n    const section ={\r\n      name:sectionName,\r\n      seats:seats\r\n    };\r\n    return fetch(this.BASE_SECTION_URL +\"/\" + sectionId,{\r\n      method: 'put',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  findEnrollmentForStudent(studentId, sectionId) {\r\n    return fetch('http://localhost:3000/api/student/' + studentId + '/section/' + sectionId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n\r\n  enrollStudentInSection(sectionId) {\r\n    return fetch(this.BASE_SECTION_URL + \"/\" + sectionId + '/enrollment' , {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n\r\n  findEnrolledSectionsForStudent(){\r\n    return fetch('http://localhost:3000/api/student/section',{\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  dropStudentFromSection(sectionId,enrollmentId){\r\n      return fetch(this.BASE_SECTION_URL + \"/\" + sectionId + \"/enrollment/\"+enrollmentId,{\r\n        method: 'delete',\r\n        credentials: 'include'\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","export class TopicServiceClient{\r\n\r\n  TOPIC_URL = \"http://localhost:8080/api/course/COURSE_ID/module/MODULE_ID/lesson/LESSON_ID/topic\";\r\n\r\n  findAllTopicsForLesson(courseId,moduleId,lessonId){\r\n    return fetch(this.TOPIC_URL.replace('COURSE_ID',courseId)\r\n      .replace('MODULE_ID',moduleId)\r\n      .replace('LESSON_ID',lessonId))\r\n    .then(response => response.json());\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class UserServiceClient{\r\n\r\n  USER_URL = \"http://localhost:3000/api/user\"\r\n\r\n  /*findUserById(userId){\r\n    return fetch(\"http://localhost:3000/api/user/\"+userId)\r\n      .then(response => response.json());\r\n\r\n  }\r\n*/\r\n  profile(){\r\n    return fetch('http://localhost:3000/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login = (user) => {\r\n    return fetch(\"http://localhost:3000/api/login\",{\r\n      method: 'post',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n\r\n    }).then(response => response.json());\r\n  }\r\n\r\n\r\n  logout() {\r\n    return fetch('http://localhost:3000/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n\r\n  createUser(username,password)\r\n  {\r\n    const user ={\r\n      username : username,\r\n      password: password\r\n    };\r\n    return fetch(\"http://localhost:3000/api/user\",{\r\n      body: JSON.stringify(user),\r\n      method:'POST',\r\n      credentials: 'include',\r\n      headers:{\r\n        'content-type':'application/json'\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  updateUser(userId, user) {\r\n    return fetch('http://localhost:3000/api/user/' + userId, {\r\n      method: 'put',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  findUserByUsername(username){\r\n    return fetch(this.USER_URL +\"/\"+username,{\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response =>response.json());\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","export class WidgetServiceClient{\r\n\r\n  WIDGET_URL =\"http://localhost:8080/api/topic/TOPIC_ID/widget\";\r\n\r\n  findAllWidgetsForLesson(topicId){\r\n    return fetch(this.WIDGET_URL.replace('TOPIC_ID',topicId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \".active.wbdv{\\r\\n  background-color: #17aaf5;\\r\\n  border-color: darkorange;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"nav nav-pills\\\">\\r\\n  <li class=\\\"nav-item\\\"\\r\\n      *ngFor = \\\"let topic of topics\\\">\\r\\n    <a class=\\\"nav-link wbdv\\\"\\r\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\"\\r\\n       [ngClass] =\\\"{'active': topic.id == topicId}\\\">\\r\\n      {{topic.title}}\\r\\n    </a>\\r\\n  </li>\\r\\n\\r\\n</ul>\\r\\n<div class=\\\"mt-2 mb-3 p-2\\\" >\\r\\n  <app-widget-list></app-widget-list>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {TopicServiceClient} from \"../services/topic.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-topic-pills',\r\n  templateUrl: './topic-pills.component.html',\r\n  styleUrls: ['./topic-pills.component.css']\r\n})\r\nexport class TopicPillsComponent implements OnInit {\r\n\r\n  constructor(private route:ActivatedRoute,\r\n              private service:TopicServiceClient) {\r\n    this.route.params.subscribe(params => this.setParams(params));\r\n  }\r\n\r\n  courseId ='';\r\n  moduleId='';\r\n  lessonId='';\r\n  topicId='';\r\n  topics =[];\r\n\r\n  setParams(params){\r\n    this.courseId = params['courseId'];\r\n    this.moduleId =params['moduleId'];\r\n    this.lessonId= params['lessonId'];\r\n    this.topicId = params['topicId'];\r\n    this.loadTopicsForLesson(this.courseId,this.moduleId,this.lessonId);\r\n  }\r\n\r\n  loadTopicsForLesson(courseId,moduleId,lessonId){\r\n    this.service.findAllTopicsForLesson(courseId,moduleId,lessonId)\r\n      .then(topics => this.topics = topics);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: purple\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"\\r\\n     style=\\\"color: wheat;\\r\\n     font-family: 'Comic Sans MS';\\r\\n      font-size: x-large\\\">WhiteBoard</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/profile\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item active disabled\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" [hidden]=!loginVal>\\r\\n        <a class=\\\"nav-link\\\" [hidden]=!admin\\r\\n           style=\\\"color: wheat\\\"\\r\\n           routerLink=\\\"/admin\\\">Admin</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">-->\\r\\n    <form [hidden]=!loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n      <span class=\\\"navbar-text\\\">\\r\\n        Logged in as : </span>\\r\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\r\\n      </span>\\r\\n      &nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\r\\n              (click)=\\\"logout()\\\">Logout\\r\\n      </button>\\r\\n    </form>\\r\\n\\r\\n    <form [hidden]=loginVal\\r\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0 mr-2\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\"\\r\\n              style=\\\"color: wheat\\\"\\r\\n              routerLink=\\\"/register\\\">Register\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n<app-course-grid></app-course-grid>\\r\\n\\r\\n<!--\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h1>\\r\\n    Welcome to White Board\\r\\n  </h1>\\r\\n\\r\\n  <a routerLink=\\\"/courses\\\">Course Navigator</a> |\\r\\n  <a routerLink=\\\"/courses/grid\\\">Course Grid</a> |\\r\\n  <a routerLink=\\\"/login\\\">Login</a> |\\r\\n  <a routerLink=\\\"/register\\\">Register</a>|\\r\\n  <a routerLink=\\\"/admin\\\">Admin</a>|\\r\\n  <a routerLink=\\\"/profile\\\">Profile</a>\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n &lt;!&ndash; <app-course-grid></app-course-grid>&ndash;&gt;\\r\\n</div>\\r\\n-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-white-board',\r\n  templateUrl: './white-board.component.html',\r\n  styleUrls: ['./white-board.component.css']\r\n})\r\nexport class WhiteBoardComponent implements OnInit {\r\n\r\n  username;\r\n  password;\r\n  admin = false;\r\n  loginVal = false;\r\n\r\n  constructor(private service:UserServiceClient,\r\n              private router:Router) { }\r\n\r\n  logout() {\r\n    this.service\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service\r\n      .profile()\r\n      .then((user) => {\r\n          console.log('logged in as : ', user);\r\n          this.username = user.username;\r\n          if (this.username !== 'No session maintained') {\r\n            this.loginVal = true;\r\n          }\r\n          if (this.username === 'admin') {\r\n            this.admin = true;\r\n          }\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\r\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\r\\n    <div *ngSwitchCase=\\\"'HEADING'\\\">\\r\\n      <div [ngSwitch]=\\\"widget.size\\\">\\r\\n        <h1 *ngSwitchCase=\\\"'1'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h1>\\r\\n        <h2 *ngSwitchCase=\\\"'2'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h2>\\r\\n        <h3 *ngSwitchCase=\\\"'3'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h3>\\r\\n        <h4 *ngSwitchCase=\\\"'4'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h4>\\r\\n\\r\\n        <br/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"'LINK'\\\">\\r\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\r\\n      <br/>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"'IMAGE'\\\">\\r\\n      <img src=\\\"{{widget.src}}\\\" alt=\\\"image\\\" class=\\\"shadow rounded card p-2\\\" height=\\\"250px\\\" />\\r\\n      <br/>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"'LIST'\\\">\\r\\n      <h4>List Widget</h4>\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item bg-light\\\"\\r\\n            *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\r\\n          {{item}}\\r\\n        </li>\\r\\n      </ul>\\r\\n      <br/>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {WidgetServiceClient} from \"../services/widget.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-widget-list',\r\n  templateUrl: './widget-list.component.html',\r\n  styleUrls: ['./widget-list.component.css']\r\n})\r\nexport class WidgetListComponent implements OnInit {\r\n\r\n  constructor(private route:ActivatedRoute,\r\n              private service:WidgetServiceClient) {\r\n    this.route.params.subscribe(params => this.setContext(params));\r\n  }\r\n\r\n  context;\r\n  widgets = [];\r\n  setContext(params) {\r\n    this.context = params;\r\n    this.loadWidgets(params.topicId);\r\n  }\r\n\r\n  loadWidgets(topicId) {\r\n    this.service.findAllWidgetsForLesson(topicId)\r\n      .then(widgets => this.widgets = widgets);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}